@model RELY_APP.ViewModel.GGlobalPOBViewModel

@{
    
    var ValidData = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ValidData);
    var ErrorData = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ErrorData);
}
<link rel="stylesheet" href="~/Content/styles/labelStyle.css" type="text/css">
<div class="boxes">

    <a class="top_links" href="#" id="FileUpload" @*onclick="fileupload()"*@>Upload </a>
    <a class="top_links" href="#" id="csvExport" onclick="DownloadGlobalPOB()();">Download  </a>
    <a class="top_links" href="#" id="DownloadTemplate" onclick="DownloadTemplate();">Download Template </a>
    <div id="jqxgrid">
    </div>
</div>
    @Scripts.Render("~/bundles/jqxgridbundle")
   
<div id="dialog" style="display: none;width:100%" align="center">

    @Html.Partial("_UploadDocuments", (RELY_APP.ViewModel.FileUploaderParametersViewModel)ViewBag.FileUploaderParameters)
</div>

@Scripts.Render("~/bundles/jQuery-File-Upload")
<script type="text/javascript" scr="~/Scripts/jquery-ui.js"></script>
<link href="~/Content/styles/jquery-ui.css" rel="stylesheet" type="text/css" />
<script>
  // $.noConflict();
      $(function () {
            $("#dialog").dialog({
                modal: true,
                autoOpen: false,
                title: "FileUpload Dialog Box",
                width: 900,
                height: 500,
               //position: 'center',
                dialogClass: "custom-dialog"
            });
            $("#FileUpload").click(function () {
                $('#dialog').dialog('open');
            });
     });
</script>

<script type="text/javascript">

    var IsHideButton='@ViewBag.HideButton';

   //var IsHideButton=1;
     var datafieldsForValid = new Array();
    var columnsForValid = new Array();
     var datafieldsforError = new Array();
    var columnsforError = new Array();

    $(document).ready(function () {
    var ValidDataGrid=@Html.Raw(Json.Encode(ValidData));
    var ErrorDataGrid=@Html.Raw(Json.Encode(ErrorData));
    var PopUpErrorMessage = '@ViewBag.PopUpErrorMessage';
    if (PopUpErrorMessage) {
        alert(PopUpErrorMessage);
        window.location.reload();
    }

        $("#jqxgridInvalidRecords").hide();
       $("#jqxgridValidRecords").hide();
          $("#HeadingValid").hide();
         $("#HeadingInValid").hide();
   if(IsHideButton==1)
    {
         $("#HeadingValid").show();
         $("#HeadingInValid").show();
         $("#HeadingValid").show();
         $("#jqxgridInvalidRecords").show();
         $("#jqxgridValidRecords").show();
         $("#btnSaveValidRecords").show();
    }
    else
    {
       if (ErrorDataGrid != 'null') {
           $("#HeadingInValid").show();
           $("#HeadingValid").show();
           $("#jqxgridInvalidRecords").show();
           $("#jqxgridValidRecords").show();
       }
       $("#btnSaveValidRecords").hide();
    }

        //Valid Grid and Invalid Grid Coding Vijay
        var source = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'Type', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'Description', type: 'string' },
                { name: 'Category', type: 'string' },
                { name: 'IFRS15Account', type: 'string' },
                 { name: 'UploadedOn', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
            ],

            id: "Id",
           localdata:ValidDataGrid
        };

          var dataAdapter = new $.jqx.dataAdapter(source);

                $('#jqxgridValidRecords').jqxGrid({
                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    theme: 'bootstrap',
                    sortable: true,
                    //columnsresize: true,
                    //columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                   // selectionmode: 'checkbox',
                    showstatusbar: false,
                    ready: function () {
                    },
                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },
                        { text: 'Type', datafield: 'Type', width: 100 },
                        { text: 'Name', datafield: 'Name'},
                        { text: 'Description', datafield: 'Description', width: 180  },
                        { text: 'Category', datafield: 'Category', width: 100  },
                        { text: 'IFRS15Account', datafield: 'IFRS15Account', width: 140 },
                        //{ text: 'CreatedBy', datafield: 'CreatedBy' },
                       // { text: 'Uploaded On', datafield: 'CreatedDateTime', width: 120, cellsformat: 'dd/MM/yyyy' },
                        //{ text: 'UpdatedBy', datafield: 'UPdatedBy' },
                        //{ text: 'Updated DateTime', datafield: 'UpdatedDateTime', cellsformat: 'dd/MM/yyyy' },

                    ]
                });

        //===============================================For error
         var source = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'Type', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'Description', type: 'string' },
                { name: 'Category', type: 'string' },
                { name: 'UploadedOn', type: 'string' },
                { name: 'IFRS15Account', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
                { name: 'SrNo', type: 'int' },
                { name: 'ValidationMessage', type: 'string' },
            ],
            localdata:ErrorDataGrid
        };
     var dataAdapter = new $.jqx.dataAdapter(source);

                $('#jqxgridInvalidRecords').jqxGrid({
                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    theme: 'bootstrap',
                    sortable: true,
                    //columnsresize: true,
                    //columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                   // selectionmode: 'checkbox',
                    showstatusbar: false,
                    ready: function () {
                    },
                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },
                        { text: 'Row No.', datafield: 'SrNo' },
                        { text: 'Validation Message', datafield: 'ValidationMessage' },
                        { text: 'Type', datafield: 'Type', width: 100 },
                        { text: 'Name', datafield: 'Name'},
                        { text: 'Description', datafield: 'Description', width: 180  },
                        { text: 'Category', datafield: 'Category', width: 100  },
                        { text: 'IFRS15Account', datafield: 'IFRS15Account', width: 140 },
                        //{ text: 'CreatedBy', datafield: 'CreatedBy' },
                     //   { text: 'Uploaded On', datafield: 'CreatedDateTime', width: 120, cellsformat: 'dd/MM/yyyy' },
                        //{ text: 'UpdatedBy', datafield: 'UPdatedBy' },
                        //{ text: 'Updated DateTime', datafield: 'UpdatedDateTime', cellsformat: 'dd/MM/yyyy' },

                    ]
                });

       //=============end error

        //End Valid and Invalid Grid Vijay

         document.getElementById("Done").addEventListener("click", function(){
         window.location.href="/GGlobalPOB/Index";
        $('#dialog').dialog('close');
    });


        $.ajax({
            data: { path: window.location.pathname },
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "post",
            success: function (data) { },
            error: function (respose) {
                //  alert("error : " + reponse);
            }
        });

        if ('@TempData["Error"]') {
            alert('@TempData["Error"]')
        }

        var source = {
            dataType: "json",
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'Type', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'Description', type: 'string' },
                { name: 'Category', type: 'string' },
                { name: 'IFRS15Account', type: 'string' },
               { name: 'UploadedOn', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
            ],

            id: "Id",
            url: "/GGlobalPOB/GetAllGGlobalPOB"
        };
        // This function is used for displaying row details
        var initrowdetails = function (index, parentElement, gridElement, datarecord) {
            //var tabsdiv = null;
            //var information = null;
            //var Attributes = null;
            //var Description = null;
            // debugger;
            //tabsdiv = $($(parentElement).children()[0]);
            //if (tabsdiv != null) {
            //    information = tabsdiv.find('.information');
            //    Attributes = tabsdiv.find('.Attributes');
            //    Description = tabsdiv.find('.Description');

            //  var title = tabsdiv.find('.title');
            //  title.text(datarecord.firstname);

            //var container = $('<div style="margin: 5px;"></div>')
            //container.appendTo($(information));

            //var leftcolumn = $('<div style="float: left; width: 45%;"></div>');
            //var rightcolumn = $('<div style="float: left; width: 40%;"></div>');
            //container.append(leftcolumn);
            //container.append(rightcolumn);
            var Type = "<div style='margin: 10px;'><b>Type:</b> " + datarecord.Type + "</div>";
            var Name = "<div style='margin: 10px;'><b>Name:</b> " + datarecord.Name + "</div>";
            var Description = "<div style='margin: 10px;'><b>Description:</b> " + datarecord.Description + "</div>";
            var Category = "<div style='margin: 10px;'><b>Category:</b> " + datarecord.Category + "</div>";
            var IFRS15Account = "<div style='margin: 10px;'><b>IFRS15Account:</b> " + datarecord.IFRS15Account + "</div>";

            $().append(Type);
            $().append(Name);
            $().append(Description);
            $().append(Category);
            $().append(IFRS15Account);

            var CreatedBy = "<div style='margin: 10px;'><b>CreatedBy:</b> " + datarecord.CreatedBy + "</div>";
            var CreatedDateTime = "<div style='margin: 10px;'><b>CreatedDateTime:</b> " + datarecord.CreatedDateTime + "</div>";
            var UpdatedBy = "<div style='margin: 10px;'><b>UpdatedBy:</b> " + datarecord.UpdatedBy + "</div>";
            var UpdateDateTime = "<div style='margin: 10px; '><b>UpdatedDateTime:</b> " + datarecord.UpdatedDateTime + "</div>";
            $().append(CreatedBy);
            $().append(CreatedDateTime);
            $().append(UpdatedBy);
            $().append(UpdateDateTime);


            //var Description = "<div style='margin: 10px;'><b>Description</b> " + datarecord.Description + "</div>";
            //$(Descriptionrightcolumn).append(Description);

            //$(tabsdiv).jqxTabs({ width: 750, height: 170 });
        }
   // }

               var dataAdapter = new $.jqx.dataAdapter(source)

               $('#jqxgrid').jqxGrid({


                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    rowdetails: true,
                    //rowdetailstemplate: { rowdetails: "<div style='margin: 10px;'><ul style='margin-left: 30px;'><li class='title'>WF</li><li>Attributes</li><li>Description</li></ul><div class='information'></div><div class='Attributes'></div><div class='Description'></div>", rowdetailsheight: 300 },
                    //ready: function () {
                    //    $("#jqxgrid").jqxGrid('showrowdetails', 0);
                    //    $("#jqxgrid").jqxGrid('showrowdetails', 1);
                       // $('#jqxgrid').jqxGrid('autoresizecolumns',Name);
                    //},
                    initrowdetails: initrowdetails,
                    theme: 'bootstrap',
                    sortable: true,
                    //columnsresize: true,
                    //columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                    showstatusbar: false,
                    ready: function () {
                           //$("#jqxgrid").jqxGrid('autoresizecolumns' );
                        //$("#jqxgrid").jqxGrid('autoresizecolumns');

                    },

                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },
                        { text: 'Type', datafield: 'Type', width: 100 },
                        { text: 'Name', datafield: 'Name'},
                        { text: 'Description', datafield: 'Description', width: 180  },
                        { text: 'Category', datafield: 'Category', width: 100  },
                        { text: 'IFRS15Account', datafield: 'IFRS15Account', width: 140 },
                        //{ text: 'CreatedBy', datafield: 'CreatedBy' },
                        { text: 'Uploaded On', datafield: 'CreatedDateTime', width: 120, cellsformat: 'dd/MM/yyyy' },
                        //{ text: 'UpdatedBy', datafield: 'UPdatedBy' },
                        //{ text: 'Updated DateTime', datafield: 'UpdatedDateTime', cellsformat: 'dd/MM/yyyy' },

                    ]
               });

               // this file download only Google Chrome browser
              // $("#csvExport").jqxButton();
               //$("#csvExport").click(function () {
               //    $("#jqxgrid").jqxGrid('exportdata', 'csv', 'GlobalPOB');
               //});
            });


        // Following Coding Done By Vijay

// To Download Template
     function DownloadTemplate()
    {

      window.location.href='/GGlobalPOB/DownloadTemplate';

    }

//method used in export to CSV button on page
     function DownloadGlobalPOB() {
         window.location.href = '/GGlobalPOB/DownloadGGlobalPOB';
     }

        //Add Types Function
    function SaveValidRecords()
    {

        var GridArray = [];
        var GridRows = $('#jqxgridValidRecords').jqxGrid('getrows')
        var collength = 5;
        if (GridRows.length > 0) {
            for (var i = 0; i < GridRows.length; i++) {              //For Row
                GridArray[i] = [];
                    var IdVal = 0;
                    GridArray[i][0] = 'Type:' + String(GridRows[i].Type);
                    GridArray[i][1] = 'Name:' + String(GridRows[i].Name);
                    GridArray[i][2] = 'Description:' + String(GridRows[i].Description);
                    GridArray[i][3] = 'Category:' + String(GridRows[i].Category);
                    GridArray[i][4] = 'IFRS15Account:' + String(GridRows[i].IFRS15Account);
            }
        }//End IF
        //var arr = [];
        //var rows = $('#jqxgridValidRecords').jqxGrid('getrows');
        //for (var i = 0; i < rows.length; i++)
        //{
        //    arr[i] = [];
        //    arr[i][0] = rows[i].Type;
        //    arr[i][1] = rows[i].Name;
        //    arr[i][2] = rows[i].Description;
        //    arr[i][3] = rows[i].Category;
        //    arr[i][4] = rows[i].IFRS15Account;

        //}
        $.ajax({
            // data: { GridData: arr },
            data: "GridArray=" + GridArray + "&collength=" + collength,
            cache: false,
            url: "/GGlobalPOB/SaveData",
                        type: "POST",
                        success: function (data) {
                            if (data.ErrorMessage) {
                                alert(data.ErrorMessage)
                                window.location.href = "/GGlobalPOB/Index";
                            } else {

                                alert('Data Saved Successfully.');
                                window.location.href = "/GGlobalPOB/Index";
                            }
                        },
                        error: function (reponse) {
                            //  alert("error : " + reponse);
                        }
                    });

    }

</script>


<body class="jqx-layout-group-default">
    <div id="jqxWidget" style="font-size:13px; font-family: Verdana; float: left;">
        <div id="jqxgrid"></div>
    </div>

    <div id="VallidInvalidGrid" class="col-md-12 col-lg-12">

        <div id="InValidDatadiv" class="tab-content" style="padding:10px;">
            <h2 id="HeadingInValid">Invalid Records</h2>
            <div id="jqxgridInvalidRecords"></div>
        </div>

        <div id="ValidDataDiv" class="tab-content" style="padding:10px;">
            <h2 id="HeadingValid">Valid Records</h2>
            <div id="jqxgridValidRecords"></div>
            <br/>
            <button type="submit" class="btn btn-red btn-cons" id="btnSaveValidRecords" name="save" onclick="SaveValidRecords();"><b>Save Valid Records&nbsp;</b></button>

        </div>

    </div>
 
    <p style="color:red;">Note :- In case validation fails (during Upload) for certain column(but you feel data is correct),try again after converting that excel column to TEXT type.</p>
</body>
