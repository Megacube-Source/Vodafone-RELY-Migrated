@model RELY_APP.ViewModel.CaptureUserResponseViewModel
@{
    var FirstQuestionDataToRender = (RELY_APP.ViewModel.LFSSectionItemViewModel)@ViewBag.FirstQuestionToRender;
}
@{
    var GridSectionItems = (List<RELY_APP.ViewModel.LFSSectionItemViewModel>)@ViewBag.GridSectionItems;
}

<link rel="stylesheet" href="~/Content/styles/labelStyle.css" type="text/css">
<script src="~/Scripts/jqxdatetimeinput.js"></script>
<script>
    var CurrentQuestionIndex = 0;
    var SectionItemsData = @Html.Raw(Json.Encode(GridSectionItems));
    var ExistingResponseText = null;
    $(document).ready(function () {
        if ('@TempData["Error"]')
        {
            alert('@TempData["Error"]')
            window.close();
        }
        //ctrl+S for saving response directly
        var isCtrl = false;
        $(document).keyup(function (e) {
            if (e.which == 17) isCtrl = false;
         }).keydown(function (e) {
            if (e.which == 17) isCtrl = true;
            if (e.which == 83 && isCtrl == true) {
                FnSaveResponse();
                return false;
            }
            });
        //down arrow for next question
        //$(document).keydown(function (e) {
        //    if (e.which == 38) {
        //        FnSave_ShowBackQuestion();
        //        return false;
        //    }
        //});
        //$(document).keydown(function (e) {
        //    if (e.which == 40) {
        //        FnSave_ShowNextQuestion();
        //        return false;
        //    }
        //});

        //save return url
        $.ajax({
            data: { path: window.location.pathname },
            cache: false,
            url: "/Home/SaveReturnPath",
            dataType: "json",
            type: "POST",
            success: function (data) {
            },
            error: function (reponse) {
                //  alert("error : " + reponse);
            }
        });

        // Method to load jqxtabs in view.
        //$('#jqxTabs').jqxTabs({ position: 'top' });


        var sourceSectionItems = {
            //localdata: SectionItemsData,
            dataType: "json",
            cache: false,
            type: "GET",
            dataFields: [
                //{ name: 'ItemNumber', type: 'int' },
                { name: 'ItemText', type: 'string' },
                { name: 'IsQuestion', type: 'bool' },
                { name: 'Response', type: 'string' },
                { name: 'QuestionCode', type: 'string' },
                { name: 'QuestionName', type: 'string' },
                { name: 'ItemTypeName', type: 'string' },
                { name: 'ToolTip', type: 'string' },
                { name: 'IsReponseAutoGenerated', type: 'bool' },

            ],
            id: 'ItemNumber',
            data: { SectionCode: '@Model.SectionCode' , ChapterCode: '@Model.ChapterCode',EntityId: '@Model.EntityId', EntityType: '@Model.EntityType', SurveyId: '@Model.SurveyId'},
            url: "/LFSSectionItems/GetBySectionCode"

        };
        @{
            GridSectionItems = (List<RELY_APP.ViewModel.LFSSectionItemViewModel>)@ViewBag.GridSectionItems;
        }
        SectionItemsData = @Html.Raw(Json.Encode(GridSectionItems));
        var dataAdapterSectionItems = new $.jqx.dataAdapter(sourceSectionItems)
        //SectionItemsData = new $.jqx.dataAdapter(sourceSectionItems);
        $('#SurveyItems').jqxGrid({
            source: dataAdapterSectionItems,
            width: "100%",
            columnsresize: true,
            pageable: true,
            pagesize: 200,
            filterable: false,
            sortable: false,
            keyboardnavigation: false,
            enablebrowserselection: true,
           // selectionmode: 'singlecell',
           // theme: 'gridlabels',
            pagesizeoptions: ['10', '50', '100', '200', '500', '1000'],

            columns: [
                {
                    text: 'Item No', datafield: 'QuestionName', width:'20%'
                },
                {
                    text: 'Item Text', datafield: 'ItemText'
                },
                {
                    text: 'Answer', datafield: 'Response'
                },
            ]
        });
        $('#SurveyItems').jqxGrid('selectrow', 0);
        if (SectionItemsData != null && SectionItemsData.length > 0) {
            //on page load, render first item of the section
            var xx = @Html.Raw(Json.Encode(FirstQuestionDataToRender));
            var name = xx.QuestionName;
            if (xx.QuestionName == null) {
                name = '';
            }
            var Qtext = xx.ItemText;
            if (xx.ItemText == null) {
                Qtext = '';
            }
            if (Qtext.length > 300) {
                document.getElementById('divQuestionText').style.height = '300px';
            } else {
                document.getElementById('divQuestionText').style.height = '100px';
            }

            document.getElementById('divQuestionText').value = name + " " + Qtext.replace('CHAR(10)+CHAR(13)', '<br>');
            CurrentQuestionCode = xx.QuestionCode;
            
            if (xx.ItemTypeName == "TABLE") {
                alert("if a Section has table type question then other items are not allowed. Please contact admin to get the survey configuration fixed");
            }
            else if (xx.ItemTypeName == "CHOOSE_QUESTION" || (xx.ItemTypeName == "YN_QUESTION") || xx.ItemTypeName == "AS_QUESTION" || xx.ItemTypeName == "COMP_QUESTION") {
                $.ajax({
                    data: { QuestionCode: xx.QuestionCode, ItemTypeName: xx.ItemTypeName },
                    cache: false,
                    url: "/LFSAnswerBank/GetByQuestionCode",
                    dataType: "json",
                    type: "POST",
                    success: function (data) {
                        if (data.answerData) {
                            document.getElementById('divAnswer').innerHTML = data.answerData;
                            if (xx.Response) {
                                $("#" + xx.QuestionCode).val(xx.Response);
                                ExistingResponseText = xx.Response;
                            } else {
                                ExistingResponseText = null;
                            }

                            GetAccountingScenarioGrid(xx.QuestionCode);
                        }
                    },
                    error: function (reponse) {
                        //  alert("error : " + reponse);
                    }
                });//ajax call
                if (xx.ItemTypeName == "AS_QUESTION") {
                    //document.getElementById('ASHelperbtn').style.display = 'block';//instead of button , we are using div to show complete data in below section of scren
                    document.getElementById('ASHelperDiv').style.display = 'block';
                }
            }
            else if (xx.ItemTypeName == "ENTER_QUESTION") {
                var htmlTobeRendered = "<textarea class='form-control' cols='20' id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "' rows=2 style='min-height:100px;min-width:400px;'></textarea>";
                document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
                if (xx.Response) {
                    $("#" + xx.QuestionCode).val(xx.Response);
                    ExistingResponseText = xx.Response;
                } else {
                    ExistingResponseText = null;
                }

            }
            else if (xx.ItemTypeName == "NUMBER_QUESTION") {
                var htmlTobeRendered = "<input onkeypress='validate(event);' type='number' id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "'>";
                document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
                if (xx.Response) {
                    $("#" + xx.QuestionCode).val(xx.Response);
                    ExistingResponseText = xx.Response;
                } else {
                    ExistingResponseText = null;
                }

            }
            else if (xx.ItemTypeName == "DATE_QUESTION") {

                //var htmlTobeRendered = "<input type='datetime-local' id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "'>";
                var htmlTobeRendered = "<div id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "'></div>";
                //document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
                //if (xx.Response) {
                //  $("#" + xx.QuestionCode).val(xx.Response);
                //}
                $("#" + xx.QuestionCode).jqxDateTimeInput({ width: '125px', height: '22px', placeHolder: "DD/MM/YYYY", value: null });

            }
            else if (xx.ItemTypeName == "SECTION_BREAK") {
                var htmlTobeRendered = "<div id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "'></div>";
                document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            }
            else if (xx.ItemTypeName == "EXPLANATION" || xx.ItemTypeName == "L1_TITLE" || xx.ItemTypeName == "L2_TITLE" || xx.ItemTypeName == "TEXT_HEADING" || xx.ItemTypeName == "TEXT") {
                var htmlTobeRendered = "<div id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "'></div>";
                document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            }
            else if (xx.ItemTypeName == "CONCLUSION") {
                var htmlTobeRendered = "<textarea readonly class='form-control' cols='20' id='" + xx.QuestionCode + "' name='" + xx.QuestionCode + "' style='min-height:150px;min-width:400px;'></textarea>";
                document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
                if (xx.Response) {
                    $("#" + xx.QuestionCode).val(xx.Response);
                    document.getElementById(xx.QuestionCode).style.background = 'lightgray';
                    document.getElementById("SaveQuestionButton").style.pointerEvents = 'none';
                    document.getElementById('SaveQuestionButton').style.backgroundColor = '#ada7a7';
                }
                @*$.ajax({
                data: { EntityId: '@Model.EntityId', EntityType: '@Model.EntityType', QuestionCode: xx.QuestionCode},
                url: "/LFSAnswerBank/GetConclusionText",
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.Conclusion) {
                        $("#" + xx.QuestionCode).val(data.Conclusion);

                    }
                    //document.getElementById(CurrentItem.QuestionCode).style.pointerEvents = 'none';
                    document.getElementById(xx.QuestionCode).style.background = 'lightgray';
                    document.getElementById("SaveQuestionButton").style.pointerEvents = 'none';
                },
                error: function (reponse) {
                    //  alert("error : " + reponse);
                }
            });//ajax call*@

            }

            if (xx.ItemTypeName == "AS_QUESTION") {
               // document.getElementById('ASHelperbtn').style.display = 'block';
                document.getElementById('ASHelperDiv').style.display = 'block';
            } else {

                //document.getElementById('ToolTipDetails').innerHTML = '';
               // document.getElementById('ASHelperbtn').style.display = 'none';
                document.getElementById('ASHelperDiv').style.display = 'none';
            }
            if (xx.ToolTip != null) {
                document.getElementById('ToolTipButton').style.display = 'block';
            }
            if (xx.IsReponseAutoGenerated) { //when response is autogenerated, User is not allowed to enter the response
                document.getElementById('msgDiv').innerHTML = 'This question is not user enterable, as response is calculated.';
                document.getElementById('autogenResponse').style.display = 'block';
                document.getElementById('autogenResponse').innerHTML = xx.Response;
                document.getElementById('divAnswer').style.display = 'none';
            } else {
                document.getElementById('msgDiv').innerHTML = '';
                document.getElementById('divAnswer').style.display = 'block';
                document.getElementById('autogenResponse').innerHTML = '';
                document.getElementById('autogenResponse').style.display = 'none';
            }
            if (xx.IsQuestion && !xx.IsReponseAutoGenerated) {
                document.getElementById('SaveQuestionButton').style.pointerEvents = 'auto';
                document.getElementById('SaveQuestionButton').style.backgroundColor = 'buttonface';
            }
            else {
                document.getElementById('SaveQuestionButton').style.pointerEvents = 'none';
                document.getElementById('SaveQuestionButton').style.backgroundColor = '#ada7a7';
            }
        }
        else {

            document.getElementById('divQuestion').style.display = 'none';
        }


        $("#SurveyItems").bind('rowselect', function (event) {
            //$('#SurveyItems').jqxGrid('updatebounddata');
            if (SectionItemsData[CurrentQuestionIndex].IsReponseAutoGenerated || !SectionItemsData[CurrentQuestionIndex].IsQuestion) {//when response is autogenerated, do nothing

            }
            else {
                var QCode = SectionItemsData[CurrentQuestionIndex].QuestionCode;
                var ChangedResponse = document.getElementById(QCode).value;
                //alert(ExistingResponseText + '     ' + ChangedResponse);
                if (String(ExistingResponseText) === String(ChangedResponse)) {

                }
                else {
                    if (!(ExistingResponseText == null && (String(ChangedResponse) === '-- Select Here --' || String(ChangedResponse) == '')) ) {
                       //var r = confirm("There is unsaved response that will be lost.Do you want to continue?");
                       //if (r == false) {
                       //    $('#SurveyItems').jqxGrid('unselectrow', CurrentQuestionIndex);
                       //     return;
                       // }
                    }
                }
             }
            var selectedRowIndex = event.args.rowindex;
            //if (confirm("Do you want save the response?")) {
            // FnSaveResponse();
            //}
            CurrentQuestionIndex = selectedRowIndex;
            if (CurrentQuestionIndex < SectionItemsData.length - 1) {
                document.getElementById('NextQuestionButton').style.pointerEvents = 'auto';
                document.getElementById('NextQuestionButton').style.backgroundColor = 'buttonface';
            } else {
                document.getElementById('NextQuestionButton').style.pointerEvents = 'none';
                document.getElementById('NextQuestionButton').style.backgroundColor = '#ada7a7';
            }
            if (CurrentQuestionIndex == 0) {
                document.getElementById('BackQuestionButton').style.pointerEvents = 'none';
                document.getElementById('BackQuestionButton').style.backgroundColor = '#ada7a7';

            } else {
                document.getElementById('BackQuestionButton').style.pointerEvents = 'auto';
                document.getElementById('BackQuestionButton').style.backgroundColor = 'buttonface';
            }
            
            FnRenderNewQuestion(SectionItemsData[CurrentQuestionIndex]);
        });

    });//document.ready


    function validate(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\./;
        //var regex = /([0-9]+(\.[0-9]+)?)/;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }
    function FnRenderNewQuestion(CurrentItem) {

        if (CurrentItem.ItemTypeName == "TABLE") {
            alert("if a Section has table type question then other items are not allowed. Please contact admin to get the survey configuration fixed");
            return;
        }
        var name = CurrentItem.QuestionName;
        if (CurrentItem.QuestionName == null) {
            name = '';
        }
        var Qtext = CurrentItem.ItemText;
        if (CurrentItem.ItemText == null) {
            Qtext = '';
        }
        //As this is textarea, Height of this control depends on the content length.
        if (Qtext.length > 300) {
            document.getElementById('divQuestionText').style.height = '310px';
        } else {
            document.getElementById('divQuestionText').style.height = '100px';
        }

        document.getElementById('divQuestionText').value = name + " " + Qtext.replace('CHAR(10)+CHAR(13)', '<br>');
        if (CurrentItem.IsQuestion && !CurrentItem.IsReponseAutoGenerated) {
            document.getElementById('SaveQuestionButton').style.pointerEvents = 'auto';
            document.getElementById('SaveQuestionButton').style.backgroundColor = 'buttonface';
        }
        else {
            document.getElementById('SaveQuestionButton').style.pointerEvents = 'none';
            document.getElementById('SaveQuestionButton').style.backgroundColor = '#ada7a7';
        }
        if (CurrentItem.ItemTypeName == "CHOOSE_QUESTION" || (CurrentItem.ItemTypeName == "YN_QUESTION") || CurrentItem.ItemTypeName == "AS_QUESTION" || CurrentItem.ItemTypeName == "COMP_QUESTION") {
            $.ajax({
                data: { QuestionCode: CurrentItem.QuestionCode, ItemTypeName: CurrentItem.ItemTypeName },
                cache: false,
                url: "/LFSAnswerBank/GetByQuestionCode",
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.answerData) {
                        document.getElementById('divAnswer').innerHTML = data.answerData;
                        if (CurrentItem.Response) {
                            $("#" + CurrentItem.QuestionCode).val(CurrentItem.Response);
                            ExistingResponseText = CurrentItem.Response;
                        } else {
                            ExistingResponseText = null;
                        }
                        GetAccountingScenarioGrid(CurrentItem.QuestionCode);
                    }
                },
                error: function (reponse) {
                    //  alert("error : " + reponse);
                }
            });//ajax call
            if (CurrentItem.ItemTypeName == "AS_QUESTION") {
                //document.getElementById('ASHelperbtn').style.display = 'block';
                document.getElementById('ASHelperDiv').style.display = 'block';
            }
        }
        else if (CurrentItem.ItemTypeName == "ENTER_QUESTION") {
            var htmlTobeRendered = "<textarea class='form-control' cols='20' id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "' rows=2 style='min-height:100px;min-width:400px;'></textarea>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            if (CurrentItem.Response) {
                $("#" + CurrentItem.QuestionCode).val(CurrentItem.Response);
                ExistingResponseText = CurrentItem.Response;
            } else {
                ExistingResponseText = null;
            }

        }
        else if (CurrentItem.ItemTypeName == "NUMBER_QUESTION") {
            var htmlTobeRendered = "<input onkeypress='validate(event);' type='number' id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "'>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            if (CurrentItem.Response) {
                $("#" + CurrentItem.QuestionCode).val(CurrentItem.Response);
                ExistingResponseText = CurrentItem.Response;
            }
        }
        else if (CurrentItem.ItemTypeName == "DATE_QUESTION") {
            var htmlTobeRendered = "<div id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "'></div>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            $("#" + CurrentItem.QuestionCode).jqxDateTimeInput({ width: '125px', height: '22px', placeHolder: "DD/MM/YYYY", value: null });
            if (CurrentItem.Response) {
                var parts = CurrentItem.Response.split('/');//splitting date into parts and then rearrange
                var Connection = new Date(parts[2], parts[1] - 1, parts[0]); //Date considers YYYY, MM,DD format
                $("#" + CurrentItem.QuestionCode).jqxDateTimeInput('setDate', Connection);
                ExistingResponseText = CurrentItem.Response;
            } else {
                ExistingResponseText = null;
            }

        }
        else if (CurrentItem.ItemTypeName == "SECTION_BREAK") {
            var htmlTobeRendered = "<div id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "'></div>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
        }
        else if (CurrentItem.ItemTypeName == "EXPLANATION" || CurrentItem.ItemTypeName == "L1_TITLE" || CurrentItem.ItemTypeName == "L2_TITLE" || CurrentItem.ItemTypeName == "TEXT_HEADING" || CurrentItem.ItemTypeName == "TEXT") {
            var htmlTobeRendered = "<div id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "'></div>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
        }
        else if (CurrentItem.ItemTypeName == "CONCLUSION") {
            var htmlTobeRendered = "<textarea readonly class='form-control' cols='20' id='" + CurrentItem.QuestionCode + "' name='" + CurrentItem.QuestionCode + "' style='min-height:150px;min-width:400px;'></textarea>";
            document.getElementById('divAnswer').innerHTML = htmlTobeRendered;
            if (CurrentItem.Response) {
                $("#" + CurrentItem.QuestionCode).val(CurrentItem.Response);
                document.getElementById(CurrentItem.QuestionCode).style.background = 'lightgray';
                document.getElementById("SaveQuestionButton").style.pointerEvents = 'none';
                document.getElementById('SaveQuestionButton').style.backgroundColor = '#ada7a7';
            }
            @*$.ajax({
                data: { EntityId:'@Model.EntityId',EntityType:'@Model.EntityType', QuestionCode: CurrentItem.QuestionCode},
                url: "/LFSAnswerBank/GetConclusionText",
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.Conclusion) {
                        $("#" + CurrentItem.QuestionCode).val(data.Conclusion);
                    }
                    document.getElementById(CurrentItem.QuestionCode).style.background = 'lightgray';
                    document.getElementById("SaveQuestionButton").style.pointerEvents = 'none';
                },
                error: function (reponse) {
                    //  alert("error : " + reponse);
                }
            });//ajax call*@
        }
        if (CurrentItem.ItemTypeName == "AS_QUESTION") {
            //document.getElementById('ASHelperbtn').style.display = 'block';
            document.getElementById('ASHelperDiv').style.display = 'block';
        } else {

            //document.getElementById('ToolTipDetails').innerHTML = '';
           // document.getElementById('ASHelperbtn').style.display = 'none';
            document.getElementById('ASHelperDiv').style.display = 'none';
        }
        if (CurrentItem.ToolTip != null && CurrentItem.ToolTip != '') {
            document.getElementById('ToolTipButton').style.display = 'block';
        } else {
            document.getElementById('ToolTipButton').style.display = 'none';
        }
        if (CurrentItem.IsReponseAutoGenerated) { //when response is autogenerated, User is not allowed to enter the response
            document.getElementById('msgDiv').innerHTML = 'This question is not user enterable, as response is calculated.';
            document.getElementById('autogenResponse').style.display = 'block';
            document.getElementById('autogenResponse').innerHTML = CurrentItem.Response;
            document.getElementById('divAnswer').style.display = 'none';
        } else {
            document.getElementById('msgDiv').innerHTML = '';
            document.getElementById('divAnswer').style.display = 'block';
            document.getElementById('autogenResponse').innerHTML = '';
            document.getElementById('autogenResponse').style.display = 'none';
        }
    }
    function FnCancelResponse() {
        if (SectionItemsData[CurrentQuestionIndex].IsReponseAutoGenerated || !SectionItemsData[CurrentQuestionIndex].IsQuestion) {//when response is autogenerated, do nothing

        } else {
            var QCode = SectionItemsData[CurrentQuestionIndex].QuestionCode;
            document.getElementById(QCode).value = ExistingResponseText;
        }
    }


    function FnSaveResponse() {
        var EntityId = '@Model.EntityId';

        if (SectionItemsData[CurrentQuestionIndex].IsReponseAutoGenerated || !SectionItemsData[CurrentQuestionIndex].IsQuestion) {//when response is autogenerated, do nothing

        } else {
            var QCode = SectionItemsData[CurrentQuestionIndex].QuestionCode;
            var AnswerValue = document.getElementById(QCode).value;
            if (AnswerValue == null || AnswerValue == 'undefined' || AnswerValue == '' || AnswerValue == '-- Select Here --') {
                // do nothing, when no answer is provided
            }
            else {//save response to database
                //restricting multiple dots in numeric field
                if (SectionItemsData[CurrentQuestionIndex].ItemTypeName == "NUMBER_QUESTION") {//check for number field
                    var countDot = (AnswerValue.match(/\./g) || []).length;
                    if (countDot > 1) {
                        alert("incorrect input, cannot save");
                        document.getElementById(QCode).value = '';
                        return;
                    }
                }
                //handling comma(,) in dropdown value
                if (SectionItemsData[CurrentQuestionIndex].ItemTypeName == "YN_QUESTION" || SectionItemsData[CurrentQuestionIndex].ItemTypeName == "CHOOSE_QUESTION" || SectionItemsData[CurrentQuestionIndex].ItemTypeName == "AS_QUESTION" || SectionItemsData[CurrentQuestionIndex].ItemTypeName == "COMP_QUESTION") {
                    var countBackslash = (AnswerValue.match(/\\/g) || []).length;
                    if (countBackslash > 0) {
                        AnswerValue = AnswerValue.replace('\\', '');
                    }
                }

                $.ajax({
                    type: "POST",
                    cache: false,
                    data: { QuestionCode: QCode, Response: AnswerValue, EntityId: EntityId, EntityType: 'LProducts' },
                    url: "/LFSUserResponse/SaveData",
                    success: function (data) {
                        if (data.success) {
                            $('#SurveyItems').jqxGrid('updatebounddata');
                            ExistingResponseText = AnswerValue;
                            //ajax call for updating the SectionItemData variable with the new grid items
                            $.ajax({
                                type: "POST",
                                cache:false,
                               data: { SectionCode: '@Model.SectionCode' , ChapterCode: '@Model.ChapterCode',EntityId: '@Model.EntityId', EntityType: '@Model.EntityType', SurveyId: '@Model.SurveyId'},
                               url: "/LFSSectionItems/GetBySectionCode",
                                success: function (data) {
                                    SectionItemsData = data;
                                    if (CurrentQuestionIndex < SectionItemsData.length - 1) {
                                        document.getElementById('NextQuestionButton').style.pointerEvents = 'auto';
                                        document.getElementById('NextQuestionButton').style.backgroundColor = 'buttonface';
                                    } else {
                                        document.getElementById('NextQuestionButton').style.pointerEvents = 'none';
                                        document.getElementById('NextQuestionButton').style.backgroundColor = '#ada7a7';
                                    }
                                    if (CurrentQuestionIndex == 0) {
                                        document.getElementById('BackQuestionButton').style.pointerEvents = 'none';
                                        document.getElementById('BackQuestionButton').style.backgroundColor = '#ada7a7';
                                    } else {
                                        document.getElementById('BackQuestionButton').style.pointerEvents = 'auto';
                                        document.getElementById('BackQuestionButton').style.backgroundColor = 'buttonface';
                                    }
                                },
                                error: function (response) {
                                }
                            });
                        }
                    },
                    error: function (response) {
                    }
                });

            }
        }
        //updating the SectionItemData variable with grid data
       // var rows = $('#SurveyItems').jqxGrid('getrows');
        //SectionItemsData = rows;
    }

    function FnSave_ShowBackQuestion()
    {
        $('#SurveyItems').jqxGrid('selectrow', CurrentQuestionIndex - 1);
        /* FnSaveResponse();
        if (CurrentQuestionIndex == 0) {
            $('#SurveyItems').jqxGrid('updatebounddata');
            var rows = $('#SurveyItems').jqxGrid('getrows');
            SectionItemsData = rows;
            return;
        }
        CurrentQuestionIndex--;
        FnRenderNewQuestion(SectionItemsData[CurrentQuestionIndex]);
        if (CurrentQuestionIndex < SectionItemsData.length) {
            document.getElementById('NextQuestionButton').style.pointerEvents = 'auto';
        } else {
            document.getElementById('NextQuestionButton').style.pointerEvents = 'none';
        }
        if (CurrentQuestionIndex == 0) {
            document.getElementById('BackQuestionButton').style.pointerEvents = 'none';
        } else {
            document.getElementById('BackQuestionButton').style.pointerEvents = 'auto';
        }
        */
    }
    function FnSave_ShowNextQuestion() {
        $('#SurveyItems').jqxGrid('selectrow', CurrentQuestionIndex+1);
        /*FnSaveResponse();
        if (CurrentQuestionIndex >= SectionItemsData.length) {
            $('#SurveyItems').jqxGrid('updatebounddata');
            var rows = $('#SurveyItems').jqxGrid('getrows');
            SectionItemsData = rows;
            return;
        }
        CurrentQuestionIndex++;
        FnRenderNewQuestion(SectionItemsData[CurrentQuestionIndex]);
        if (CurrentQuestionIndex < SectionItemsData.length) {
            document.getElementById('NextQuestionButton').style.pointerEvents = 'auto';
        } else {
            document.getElementById('NextQuestionButton').style.pointerEvents = 'none';
        }
        if (CurrentQuestionIndex == 0) {
            document.getElementById('BackQuestionButton').style.pointerEvents = 'none';
        } else {
            document.getElementById('BackQuestionButton').style.pointerEvents = 'auto';
        }*/

    }
    function FnShowToolTip() {
        $("#myModal").modal()
       // $('#dialogToolTip').dialog('open');
        if (SectionItemsData[CurrentQuestionIndex].ToolTip)


        //    var ToBeReplaced = [];
        //var ReplacedWith = [];
        
        //ToBeReplaced[0] = '\r\n';
        //ToBeReplaced[1] = '\r\n\r\n';
        //ReplacedWith[0] = '<br>';
        //ReplacedWith[1] = '<br><br>';
        //for (var i= 0; i < ToBeReplaced.length;i++)
        //{
        //    document.getElementById('ToolTipDetails').innerHTML = SectionItemsData[CurrentQuestionIndex].ToolTip.replace(ToBeReplaced[i], ReplacedWith[i]);
        //}
        // document.getElementById('ToolTipDetails').innerHTML = SectionItemsData[CurrentQuestionIndex].ToolTip.replace('CHAR(10)+CHAR(13)','<br>');
        //document.getElementById('ToolTipDetails').innerHTML = SectionItemsData[CurrentQuestionIndex].ToolTip.replace('\r\n', '<br>');
            document.getElementById('ToolTipDetails').innerHTML = SectionItemsData[CurrentQuestionIndex].ToolTip;
    }

    function FnShowASHelper() {
        //var ACC_Reference = SectionItemsData[CurrentQuestionIndex].Response;
        //alert("in dailog box");
        //$('#dialogASHelper').dialog('open');
       // GetAccountingScenarioGrid();
        $("#AsHelperModal").modal()
        //if (SectionItemsData[CurrentQuestionIndex].ToolTip)
        //    document.getElementById('ToolTipDetails').innerHTML = SectionItemsData[CurrentQuestionIndex].ToolTip.replace('char(10)+char(13)', '<br>');
    }

</script>


<div class="col-md-12">

    <div class="col-md-8 col-lg-8">
        <div id="SurveyItems"></div>
    </div>
    <div class="col-md-4 col-lg-4 boxes" id="divQuestion" name="divQuestion" style="width:33% !important;">
        @*<div id='jqxTabs'>*@
        @*<ul>
                <li style="margin-left: 30px;">Questions</li>
            </ul>*@
        <div class="section">
            <div id="ItemsQuestionDisplayBox"></div>
            @*<div class="AnimatedText">Question will animate here</div>*@
            <br />
            <textarea id="divQuestionText" name="divQuestionText" class="textarea1" style="height:100px;border:none;font-family: Verdana,Arial,sans-serif;font-style: normal;font-size: 13px; text-align: left;">

            </textarea>
           @*<div id='divQuestionText' style="font-family: Verdana,Arial,sans-serif;font-style: normal;font-size: 13px; text-align: left;">
                Question text here
            </div>*@<br />
            <div id="msgDiv" name="msgDiv" style="color:red; text-align:left;font-size:smaller;"></div>
            <div id="autogenResponse" name="autogenResponse" readonly style="background:lightgray;"></div>
            <div id="divAnswer" style="text-align: left;"></div><br />
            <div id="buttonsDiv" style="text-align: left;">
                <button id="BackQuestionButton" name="BackQuestionButton" style="pointer-events:none; background-color:#ada7a7" onclick="FnSave_ShowBackQuestion();">Back</button>&ensp;
                @*<button id="CancelQuestionButton" name="CancelQuestionButton" style="display:none;" onclick="FnCancelResponse();">Cancel</button>&ensp;*@
                <button id="SaveQuestionButton" name="SaveQuestionButton" onclick="FnSaveResponse();">Save</button>&ensp;
                <button id="NextQuestionButton" name="NextQuestionButton" style="background-color:buttonface" onclick="FnSave_ShowNextQuestion();">Next</button>&ensp;
                <button id="ToolTipButton" name="ToolTipButton" style="display:none;" onclick="FnShowToolTip();">Tool Tip</button>&ensp;
                <button id="ASHelperbtn" name="ASHelperbtn" onclick="FnShowASHelper();" style="display:none;">Help on Acc Scn</button>
            </div>
        </div>
    </div>
    @*</div>*@
</div>
<br/>
<div class="col-md-12 col-lg-12" id="ASHelperDiv" name="ASHelperDiv" style="display:none;margin-top: 10px;">
    <h3>Accounting Scenario Helper</h3>
    @Html.Partial("_ASHelperPartial")

</div>

@*<div class="col-md-12">
        <br />
        <div id="ToolTipDetails" name="ToolTipDetails" style="background-color: lightgoldenrodyellow;border-radius: 5px; border: 1px solid lightgrey;"></div>

    </div>*@

@*<div id="dialogToolTip" style="display: none;width:100%">

        @Html.Partial("_ToolTipPartial")
    </div>*@

<!-- Modal -->
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="width:90%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Tooltip</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_ToolTipPartial")

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-red" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="AsHelperModal" class="modal fade" role="dialog">
    <div class="modal-dialog" style="width:90%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Accounting Scenario Helper</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_ASHelperPartial")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-red" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
