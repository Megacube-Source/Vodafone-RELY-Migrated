@model RELY_APP.ViewModel.LFSQuestionBankViewModel

@{
    
    var ValidData = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ValidData);
    var ErrorData = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ErrorData);
}

    <div class="boxes">

        <a class="top_links" href="#" id="FileUpload" onclick="fileupload()">Upload </a>
        <a class="top_links" href="#" id="csvExport" onclick="DownloadLFSQuestionBank()">Upload </a>
        <a class="top_links" href="#" id="DownloadTemplate" onclick="DownloadTemplate();">Download Template </a>
        <div id="jqxgrid">
        </div>
    </div>
@Scripts.Render("~/bundles/jqxgridbundle")

<div id="dialog" style="display: none;width:100%" align="center">

    @Html.Partial("_UploadDocuments", (RELY_APP.ViewModel.FileUploaderParametersViewModel)ViewBag.FileUploaderParameters)
</div>

@Scripts.Render("~/bundles/jQuery-File-Upload")
<script type="text/javascript" scr="~/Scripts/jquery-ui.js"></script>
<link href="~/Content/styles/jquery-ui.css" rel="stylesheet" type="text/css" />
<script>
  // $.noConflict();
      $(function () {
            $("#dialog").dialog({
                modal: true,
                autoOpen: false,
                title: "FileUpload Dialog Box",
                width: 900,
                height: 500,
               //position: 'center',

            });
            $("#FileUpload").click(function () {
                $('#dialog').dialog('open');
            });
     });
</script>

<script type="text/javascript">

    var IsHideButton=@ViewBag.HideButton;

   //var IsHideButton=1;
     var datafieldsForValid = new Array();
    var columnsForValid = new Array();
     var datafieldsforError = new Array();
    var columnsforError = new Array();

    $(document).ready(function () {
    var ValidDataGrid=@Html.Raw(Json.Encode(ValidData));
    var ErrorDataGrid=@Html.Raw(Json.Encode(ErrorData));

        $("#jqxgridInvalidRecords").hide();
       $("#jqxgridValidRecords").hide();
          $("#HeadingValid").hide();
         $("#HeadingInValid").hide();
   if(IsHideButton==1)
    {
     $("#HeadingValid").show();
         $("#HeadingInValid").show();
     $("#HeadingValid").show();
       $("#jqxgridInvalidRecords").show();
       $("#jqxgridValidRecords").show();
     $("#btnSaveValidRecords").show();
    // $('#btnSubmit').prop('disabled',true);
    }
    else
    {
           //$("#jqxgridInvalidRecords").hide();
      // $("#jqxgridValidRecords").hide();
     // $("#HeadingInValid").show();
      //  $("#VallidInvalidGrid").show();

      $("#btnSaveValidRecords").hide();
    }

        //Valid Grid and Invalid Grid Coding
        var source = {
            dataType: "json",
            cache: false,
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'CompanyCode', type: 'string' },
               // { name: 'ItemTypeId', type: 'string' },
                { name: 'ItemTypeName', type: 'string' },
                { name: 'QuestionCode', type: 'string' },
                { name: 'QuestionName', type: 'string' },
                { name: 'Comments', type: 'string' },
                { name: 'ReadableName', type: 'string' },
                { name: 'QuestionText', type: 'string' },
                { name: 'ToolTip', type: 'string' },
                { name: 'VGAPReference', type: 'string' },
                { name: 'IFRSReference', type: 'string' },
                { name: 'IsActive', type: 'string' },
                { name: 'InternalNotes', type: 'string' },
                { name: 'UploadedOn', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
                
            ],

            id: "Id",
           localdata:ValidDataGrid
        };

          var dataAdapter = new $.jqx.dataAdapter(source);

                $('#jqxgridValidRecords').jqxGrid({
                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    theme: 'bootstrap',
                    sortable: true,
                    columnsresize: true,
                    columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                   // selectionmode: 'checkbox',
                    showstatusbar: false,
                    ready: function () {
                    },
                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },

                        { text: 'CompanyCode', datafield: 'CompanyCode', width: 100 },
                       // { text: 'ItemTypeId', datafield: 'ItemTypeId', width: 100 },
                        { text: 'ItemTypeName', datafield: 'ItemTypeName', width: 100 },
                        { text: 'QuestionCode', datafield: 'QuestionCode' },
                        { text: 'QuestionName', datafield: 'QuestionName', width: 180 },
                        { text: 'Comments', datafield: 'Comments', width: 100 },
                        { text: 'ReadableName', datafield: 'ReadableName', width: 100 },
                        { text: 'QuestionText', datafield: 'QuestionText', width: 100 },
                        { text: 'ToolTip', datafield: 'ToolTip', width: 100 },
                        { text: 'VGAPReference', datafield: 'VGAPReference', width: 100 },
                        { text: 'IFRSReference', datafield: 'IFRSReference', width: 100 },
                        { text: 'IsActive', datafield: 'IsActive', width: 100 },
                        { text: 'InternalNotes', datafield: 'InternalNotes', width: 100 },
                        

                    ]
                });

        //===============================================For error
         var source = {
             dataType: "json",
             cache: false,
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'CompanyCode', type: 'string' },
               // { name: 'ItemTypeId', type: 'string' },
                { name: 'ItemTypeName', type: 'string' },
                { name: 'QuestionCode', type: 'string' },
                { name: 'QuestionName', type: 'string' },
                { name: 'Comments', type: 'string' },
                { name: 'ReadableName', type: 'string' },
                { name: 'QuestionText', type: 'string' },
                { name: 'ToolTip', type: 'string' },
                { name: 'VGAPReference', type: 'string' },
                { name: 'IFRSReference', type: 'string' },
                { name: 'IsActive', type: 'string' },
                { name: 'InternalNotes', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
                { name: 'SrNo', type: 'int' },
                { name: 'ValidationMessage', type: 'string' },
            ],
            localdata:ErrorDataGrid
        };
     var dataAdapter = new $.jqx.dataAdapter(source);

                $('#jqxgridInvalidRecords').jqxGrid({
                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    theme: 'bootstrap',
                    sortable: true,
                    columnsresize: true,
                    columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                   // selectionmode: 'checkbox',
                    showstatusbar: false,
                    ready: function () {
                    },
                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },
                        { text: 'Row No.', datafield: 'SrNo' },
                        { text: 'Validation Message', datafield: 'ValidationMessage' },
                        { text: 'CompanyCode', datafield: 'CompanyCode', width: 100 },
                       // { text: 'ItemTypeId', datafield: 'ItemTypeId', width: 100 },
                        { text: 'ItemTypeName', datafield: 'ItemTypeName', width: 100 },
                        { text: 'QuestionCode', datafield: 'QuestionCode' },
                        { text: 'QuestionName', datafield: 'QuestionName', width: 180 },
                        { text: 'Comments', datafield: 'Comments', width: 100 },
                        { text: 'ReadableName', datafield: 'ReadableName', width: 100 },
                        { text: 'QuestionText', datafield: 'QuestionText', width: 100 },
                        { text: 'ToolTip', datafield: 'ToolTip', width: 100 },
                        { text: 'VGAPReference', datafield: 'VGAPReference', width: 100 },
                        { text: 'IFRSReference', datafield: 'IFRSReference', width: 100 },
                        { text: 'IsActive', datafield: 'IsActive', width: 100 },
                        { text: 'InternalNotes', datafield: 'InternalNotes', width: 100 },
                        //{ text: 'CreatedBy', datafield: 'CreatedBy' },
                     //   { text: 'Uploaded On', datafield: 'CreatedDateTime', width: 120, cellsformat: 'dd/MM/yyyy' },
                        //{ text: 'UpdatedBy', datafield: 'UPdatedBy' },
                        //{ text: 'Updated DateTime', datafield: 'UpdatedDateTime', cellsformat: 'dd/MM/yyyy' },

                    ]
                });

       //=============end error

        //End Valid and Invalid Grid Vijay

         document.getElementById("Done").addEventListener("click", function(){
         window.location.href="/LFSQuestionBank/Index";
        $('#dialog').dialog('close');
    });


        $.ajax({
            data: { path: window.location.pathname },
            url: "Home/SaveReturnPath",
            cache: false,
            dataType: "json",
            type: "post",
            success: function (data) { },
            error: function (respose) {
                //  alert("error : " + reponse);
            }
        });

        if ('@TempData["Error"]') {
            alert('@TempData["Error"]')
        }

        var source = {
            dataType: "json",
            cache : false,
            dataFields: [
                { name: 'Id', type: 'string' },
                { name: 'CompanyCode', type: 'string' },
                //{ name: 'ItemTypeId', type: 'string' },
                { name: 'Name', type: 'string' },
                { name: 'QuestionCode', type: 'string' },
                { name: 'QuestionName', type: 'string' },
                { name: 'Comments', type: 'string' },
                { name: 'ReadableName', type: 'string' },
                { name: 'QuestionText', type: 'string' },
                { name: 'ToolTip', type: 'string' },
                { name: 'VGAPReference', type: 'string' },
                { name: 'IFRSReference', type: 'string' },
                { name: 'IsActive', type: 'string' },
                { name: 'InternalNotes', type: 'string' },
               { name: 'UploadedOn', type: 'string' },
                { name: 'CreatedBy', type: 'string' },
                { name: 'UpdatedBy', type: 'string' },
                { name: 'CreatedDateTime', type: 'date' },
                { name: 'UpdatedDateTime', type: 'date' },
            ],

            id: "Id",
            url: "/LFSQuestionBank/GetQuestionBank"
        };
        // This function is used for displaying row details
        var initrowdetails = function (index, parentElement, gridElement, datarecord) {
            //var tabsdiv = null;
            //var information = null;
            //var Attributes = null;
            //var Description = null;
            // debugger;
            //tabsdiv = $($(parentElement).children()[0]);
            //if (tabsdiv != null) {
            //    information = tabsdiv.find('.information');
            //    Attributes = tabsdiv.find('.Attributes');
            //    Description = tabsdiv.find('.Description');

            //  var title = tabsdiv.find('.title');
            //  title.text(datarecord.firstname);

            //var container = $('<div style="margin: 5px;"></div>')
            //container.appendTo($(information));

            //var leftcolumn = $('<div style="float: left; width: 45%;"></div>');
            //var rightcolumn = $('<div style="float: left; width: 40%;"></div>');
            //container.append(leftcolumn);
            //container.append(rightcolumn);
            var CompanyCode = "<div style='margin: 10px;'><b>CompanyCode:</b> " + datarecord.CompanyCode + "</div>";
           // var ItemTypeId = "<div style='margin: 10px;'><b>ItemTypeId:</b> " + datarecord.ItemTypeId + "</div>";
            var ItemTypeName = "<div style='margin: 10px;'><b>ItemTypeName:</b> " + datarecord.ItemTypeName + "</div>";
            var QuestionCode = "<div style='margin: 10px;'><b>QuestionCode:</b> " + datarecord.QuestionCode + "</div>";
            var QuestionName = "<div style='margin: 10px;'><b>QuestionName:</b> " + datarecord.QuestionName + "</div>";
            var Comments = "<div style='margin: 10px;'><b>Comments:</b> " + datarecord.Comments + "</div>";
            var ReadableName = "<div style='margin: 10px;'><b>ReadableName:</b> " + datarecord.ReadableName + "</div>";
            var QuestionText = "<div style='margin: 10px;'><b>QuestionText:</b> " + datarecord.QuestionText + "</div>";
            var ToolTip = "<div style='margin: 10px;'><b>ToolTip:</b> " + datarecord.ToolTip + "</div>";
            var VGAPReference = "<div style='margin: 10px;'><b>VGAPReference:</b> " + datarecord.VGAPReference + "</div>";
            var IFRSReference = "<div style='margin: 10px;'><b>IFRSReference:</b> " + datarecord.IFRSReference + "</div>";
            var IsActive = "<div style='margin: 10px;'><b>IsActive:</b> " + datarecord.IsActive + "</div>";
            var InternalNotes = "<div style='margin: 10px;'><b>InternalNotes:</b> " + datarecord.InternalNotes + "</div>";

            $().append(CompanyCode);
           // $().append(ItemTypeId);
            $().append(ItemTypeName);
            $().append(QuestionCode);
            $().append(QuestionName);
            $().append(Comments);
            $().append(ReadableName);
            $().append(QuestionText);
            $().append(ToolTip);
            $().append(VGAPReference);
            $().append(IFRSReference);
            $().append(IsActive);
            $().append(InternalNotes);

            var CreatedBy = "<div style='margin: 10px;'><b>CreatedBy:</b> " + datarecord.CreatedBy + "</div>";
            var CreatedDateTime = "<div style='margin: 10px;'><b>CreatedDateTime:</b> " + datarecord.CreatedDateTime + "</div>";
            var UpdatedBy = "<div style='margin: 10px;'><b>UpdatedBy:</b> " + datarecord.UpdatedBy + "</div>";
            var UpdateDateTime = "<div style='margin: 10px; '><b>UpdatedDateTime:</b> " + datarecord.UpdatedDateTime + "</div>";
            $().append(CreatedBy);
            $().append(CreatedDateTime);
            $().append(UpdatedBy);
            $().append(UpdateDateTime);



        }
   // }

               var dataAdapter = new $.jqx.dataAdapter(source)

               $('#jqxgrid').jqxGrid({


                    source: dataAdapter,
                    width: '100%',
                    autoheight: true,
                    rowdetails: true,
                    //rowdetailstemplate: { rowdetails: "<div style='margin: 10px;'><ul style='margin-left: 30px;'><li class='title'>WF</li><li>Attributes</li><li>Description</li></ul><div class='information'></div><div class='Attributes'></div><div class='Description'></div>", rowdetailsheight: 300 },
                    //ready: function () {
                    //    $("#jqxgrid").jqxGrid('showrowdetails', 0);
                    //    $("#jqxgrid").jqxGrid('showrowdetails', 1);
                       // $('#jqxgrid').jqxGrid('autoresizecolumns',Name);
                    //},
                    initrowdetails: initrowdetails,
                    theme: 'bootstrap',
                    sortable: true,
                    columnsresize: true,
                    columnsreorder: true,
                    altrows: true,
                    pageable: true,
                    filterable: true,
                    autoshowcolumnsmenubutton: false,//down arrow always visible for filter and sorting
                    showstatusbar: false,
                    ready: function () {
                           //$("#jqxgrid").jqxGrid('autoresizecolumns' );
                        $("#jqxgrid").jqxGrid('autoresizecolumns');

                    },

                    columns: [
                        //{ text: 'Id#', datafield: 'Id' },
                        { text: 'CompanyCode', datafield: 'CompanyCode', width: 100 },
                       // { text: 'ItemTypeId', datafield: 'ItemTypeId', width: 100 },
                        { text: 'ItemTypeName', datafield: 'Name', width: 100 },
                        { text: 'QuestionCode', datafield: 'QuestionCode' },
                        { text: 'QuestionName', datafield: 'QuestionName', width: 180 },
                        { text: 'Comments', datafield: 'Comments', width: 100 },
                        { text: 'ReadableName', datafield: 'ReadableName', width: 100 },
                        { text: 'QuestionText', datafield: 'QuestionText', width: 100 },
                        { text: 'ToolTip', datafield: 'ToolTip', width: 100 },
                        { text: 'VGAPReference', datafield: 'VGAPReference', width: 100 },
                        { text: 'IFRSReference', datafield: 'IFRSReference', width: 100 },
                        { text: 'IsActive', datafield: 'IsActive', width: 100 },
                        { text: 'InternalNotes', datafield: 'InternalNotes', width: 100 },
                        //{ text: 'CreatedBy', datafield: 'CreatedBy' },
                        { text: 'Uploaded On', datafield: 'CreatedDateTime', width: 120, cellsformat: 'dd/MM/yyyy' },
                        //{ text: 'UpdatedBy', datafield: 'UPdatedBy' },
                        //{ text: 'Updated DateTime', datafield: 'UpdatedDateTime', cellsformat: 'dd/MM/yyyy' },

                    ]
               });

               // this file download only Google Chrome browser
               //$("#csvExport").jqxButton();
               //$("#csvExport").click(function () {
               //    $("#jqxgrid").jqxGrid('exportdata', 'csv', 'QuestionBank');
               //});
            });


        // Following Coding Done By Vijay

// To Download Template
     function DownloadTemplate()
    {

      window.location.href='/LFSQuestionBank/DownloadTemplate';

    }

        //Add Types Function

     function SaveValidRecords()
     {
         
             var GridArray = [];
             var GridRows = $('#jqxgridValidRecords').jqxGrid('getrows')
             var collength = 12;
             if (GridRows.length > 0) {
                 for (var i = 0; i < GridRows.length; i++) {              //For Row
                     GridArray[i] = [];
                     var IdVal = 0;
                     GridArray[i][0] = 'CompanyCode:' + String(GridRows[i].CompanyCode);
                     // GridArray[i][1] = 'ItemTypeId:' + String(GridRows[i].ItemTypeId);
                     GridArray[i][1] = 'ItemTypeName:' + String(GridRows[i].ItemTypeName);
                     GridArray[i][2] = 'QuestionCode:' + String(GridRows[i].QuestionCode);
                     GridArray[i][3] = 'QuestionName:' + String(GridRows[i].QuestionName);
                     GridArray[i][4] = 'Comments:' + String(GridRows[i].Comments);
                     GridArray[i][5] = 'ReadableName:' + String(GridRows[i].ReadableName);
                     GridArray[i][6] = 'QuestionText:' + String(GridRows[i].QuestionText);
                     GridArray[i][7] = 'ToolTip:' + String(GridRows[i].ToolTip);
                     GridArray[i][8] = 'VGAPReference:' + String(GridRows[i].VGAPReference);
                     GridArray[i][9] = 'IFRSReference:' + String(GridRows[i].IFRSReference);
                     GridArray[i][10] = 'IsActive:' + Boolean(GridRows[i].IsActive);
                     GridArray[i][11] = 'InternalNotes:' + String(GridRows[i].InternalNotes);
                 }
             }
             $.ajax({
                 data: "GridArray=" + GridArray + "&collength=" + collength,
                 cache : false,
                 url: "/LFSQuestionBank/SaveData",
                 type: "POST",
                 success: function (data) {
                     if (data.ErrorMessage) {
                         alert(data.ErrorMessage)
                         window.location.href = "/LFSQuestionBank/Index";
                     } else {

                         alert('Data Saved Successfully.');
                         window.location.href = "/LFSQuestionBank/Index";
                     }
                 },
                 error: function (reponse) {
                     //  alert("error : " + reponse);
                 }
             });

         }
     
    
     function DownloadLFSQuestionBank() {
         window.location.href = '/LFSQuestionBank/DownloadLFSQuestionBank';
     }
</script>

<body class="jqx-layout-group-default">
    <div id="jqxWidget" style="font-size:13px; font-family: Verdana; float: left;">
        <div id="jqxgrid"></div>
        @*<div style="margin-top: 10px;">
            <div style="margin-left:10px; float: left;">
                <input type="button" id="csvExport" value="Export to CSV" onclick="DownloadLFSQuestionBank();" />
            </div>

        </div>*@
    </div>

    <div id="VallidInvalidGrid" class="col-md-12 col-lg-12">

        <div id="InValidDatadiv" class="tab-content" style="padding:10px;">
            <h2 id="HeadingInValid">Invalid Records</h2>
            <div id="jqxgridInvalidRecords"></div>
        </div>

        <div id="ValidDataDiv" class="tab-content" style="padding:10px;">
            <h2 id="HeadingValid">Valid Records</h2>
            <div id="jqxgridValidRecords"></div>
            <br />
            <button type="submit" class="btn btn-red btn-cons" id="btnSaveValidRecords" name="save" onclick="SaveValidRecords();"><b>Save Valid Records&nbsp;</b></button>

        </div>

    </div>

</body>
