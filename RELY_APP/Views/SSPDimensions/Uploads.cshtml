@model RELY_APP.ViewModel.XSSPDimensionViewModel

@{

    var CompanySpecificData = (List<RELY_APP.ViewModel.LCompanySpecificColumnViewModel>
    )@ViewBag.CompanySpecificColumns;
}
@{
    ViewBag.Title = "Upload SSP Dimensions";
}
<style>
    #pageloader {
        background: rgba( 255, 255, 255, 0.8 );
        display: none;
        height: 100%;
        position: fixed;
        width: 100%;
        z-index: 9999;
    }

        #pageloader img {
            left: 50%;
            margin-left: -32px;
            margin-top: -32px;
            position: absolute;
            top: 50%;
        }
</style>
<style>
    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 9999; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 100%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
</style>
<script>
        $(document).ready(function () {
            if ('@ViewBag.ReturnMessage') {
                alert('@ViewBag.ReturnMessage')
            }
        });

        window.onload = function GetGridData() {
            FnGetGrid()
        }


        function FnGetGrid() {
            $.ajax({
                url: "/SSPDimensions/GetByUserForRequestUploadGrid",
                dataType: "json",
                type: "GET",
                cache: false,
                success: function (data) {
                    var sourcea = {
                        dataType: "json",
                        dataFields: [
                            { name: 'Id', type: 'string' },
                            { name: 'XStatus', type: 'string' },
                            { name: 'XBatchNumber', type: 'string' },
                            { name: 'LbfFileName', type: 'string' },
                            { name: 'XRecordCount', type: 'string' },
                            { name: 'XUploadStartDateTime', type: 'date' },
                            { name: 'IsImport', type: 'int' },
                        ],
                        localdata: data
                    };
                    var cellsrendererPayee = function (row, columnfield, value, defaulthtml, columnproperties) {
                        var selectedrowindex = $('#jqxgrid').jqxGrid('selectedrowindex');
                        var xx = $('#jqxgrid').jqxGrid("getrowid", row);
                        var yy = $('#jqxgrid').jqxGrid("getrowdata", row);
                        var Id = yy.Id;
                        var IsImport = yy.IsImport;
                        var status = yy.XStatus;
                        if (IsImport == 1)//means Import is on and no errors.
                        {
                            if (status == 'Validated') {
                                return '<a href="#" onclick="FnUploadValidatedPayeeBatch(' + Id + ')" class="GridButton"><i class=\"fa fa-upload\" aria-hidden=\"true\" style=\"color:#e60000;font-size:20px !important;\" title=\"Import File\"><font> </font></i></a>&ensp;'
                                    + '<a href="#" onclick="FnDelete(' + Id + ')" class="GridButton"><i class=\"fa fa-times\" aria-hidden=\"true\" style=\"color:#e60000;font-size:20px !important;\" title=\"Delete\"></i></a>&ensp;'
                                    + '<a href="#" onclick="FnDownloadFile(' + Id + ')" class="GridButton"><i class=\"fa fa-file-o\" aria-hidden=\"true\" style=\"color:#e60000;font-size:18px !important;margin-top:5px;\" title=\"Download File\"></i></a>&ensp;'
                            } else {
                                return '<a href="#" onclick="FnDownloadFile(' + Id + ')"><i class=\"fa fa-file-o\" aria-hidden=\"true\" style=\"color:#e60000;font-size:18px !important;margin-top:5px;\" title=\"Download File\"></i></a>&ensp;'
                            }
                        } else {//DonwloadErrors is on here
                            return '<a href="#" onclick="FnDelete(' + Id + ')" class="GridButton"><i class=\"fa fa-times\" aria-hidden=\"true\" style=\"color:#e60000;font-size:20px !important;\" title=\"Delete\"></i></button>&ensp;'
                                + '<a href="#" onclick="FnDownloadFile(' + Id + ')" class="GridButton"><i class=\"fa fa-file-o\" aria-hidden=\"true\" style=\"color:#e60000;font-size:18px !important;margin-top:5px;\" title=\"Download File\"></i></a>&ensp;'
                                + '<a href="#" onclick="FnDownloadErrors(' + Id + ')" class="GridButton"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\" style=\"color:#e60000;font-size:20px !important;\" title=\"Download Errors\"></i></a>&ensp;'
                        }

                    };
                    var dataAdaptera = new $.jqx.dataAdapter(sourcea)
                    $('#jqxgrid').jqxGrid({
                        source: dataAdaptera,
                        width: '100%',
                        //autoheight: true,
                        theme: 'bootstrap',
                        sortable: true,
                        columnsresize: true,
                        columnsreorder: true,
                        autorowheight: true,
                        pageable: true,
                        pagesize: 20,
                        pagesizeoptions: [5, 10, 20, 50, 100],
                        ready: function () {
                        },
                        columns: [
                            { text: 'Action', datafield: 'Id', cellsrenderer: cellsrendererPayee, editable: false, width: '15%' },
                            { text: 'Status', datafield: 'XStatus', editable: false },
                            { text: 'Batch Number', datafield: 'XBatchNumber', editable: false, width: '10%' },
                            { text: 'File Name', datafield: 'LbfFileName', editable: false },
                            { text: 'Count', datafield: 'XRecordCount', editable: false, width: '10%' },
                            { text: 'Date', datafield: 'XUploadStartDateTime', editable: false, cellsformat: "dd/MM/yyyy" },
                        ]
                    });
                },
                error: function (reponse) {
                }
            });
        }

</script>
<script>

    function FnDownloadErrors(Id) {
        window.location.href = '/SSPDimensions/DownloadErrorFile?Id=' + Id;
    }
    //This will download the uploaded excel file
    function FnDownloadFile(Id) {
        window.location.href = '/SSPDimensions/DownloadDocument?Id=' + Id;
    }
    function FnDelete(Id) {
        var r = confirm("Are you sure to delete the selected batch?");
        if (r == false) {
            return;
        }
        else {
            $.ajax({
                url: "/LProducts/DeleteRequestUploadBatch",
                dataType: "json",
                data: { Id: Id },
                type: "GET",
                cache: false,
                success: function (data) {
                    alert("Data deleted successfully.");
                    FnGetGrid();
                    return;
                },
                error: function (reponse) {
                }
            });
        }
    }
    function FnUpload() {
        if (document.getElementById('File1').value) {
            return Fnchecksubmit()
        }
        else {
            alert('Please choose a file')
            return false;
        }
    }
    function FnOpenInstructions() {
        document.getElementById('myModal').style.display = "block";
    }
    function FnUploadValidatedPayeeBatch(Id) {
        $("#pageloader").fadeIn();
        $.ajax({
            url: "/SSPDimensions/UploadValidatedRequestBatch",
            dataType: "json",
            data: { Id: Id },
            type: "GET",
            cache: false,
            success: function (data) {
                alert("Data imported successfully.");
                window.location.href = '/SSPDimensions/Uploads';
            },
            error: function (reponse) {
                alert("Data Failed.");
                window.location.href = '/SSPDimensions/Uploads';
            }
        });
    }

    //This method checks the type of file which is being uploaded while submitting form
    function Fnchecksubmit() {
        var xx = document.getElementById('File1').value
        if (xx.split(".")[1].toLowerCase() == 'xls' || xx.split(".")[1].toLowerCase() == 'xlsx') {
            document.getElementById('Message').style.display = 'block'
            return true;
        } else {
            alert("File Format is not supported")
            return false;
        }
    }

</script>
<script>
    var $form = null;

</script>
<div id="pageloader">
    <img src="~/Content/Images/loader.gif" alt="loading..." />
</div>
<form id="fileupload1" method="POST" enctype="multipart/form-data" data-url="@Url.Action(" Uploads","SSPDimensions")">
    @Html.HiddenFor(m => m.SaveFileInBucket)
    @Html.Hidden("IsDataUpload", true)
    <div style="padding:10px;">

        <h4 class="text-danger">@TempData["Message"]</h4>

        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="form-group">
                @Html.Label("Select File", htmlAttributes: new { @class = " col-md-2 control-label" })
                <div class="col-lg-10">
                    <input type="file" name="File1" id="File1" accept=".xls,.xlsx" class="form-control col-lg-5" onchange=FnUpload();>
                    <div class="col-lg-1"></div>
                    <button class="btn btn-red btn-cons  col-lg-1" value="Submit" id="Submit">Validate &nbsp;</button>&nbsp;
                </div>
            </div>
        </div>
        <p class="text-danger" style="font-size:smaller;">

            Note :- In case validation fails for certain column(but you feel data is correct),try again after converting that excel column to TEXT type.
        </p>
        <div id="jqxgrid"></div>
        <br />
        <div class="form-group">
            &emsp;&emsp;<button class="btn btn-borderRed btn-cons" value="Back" id="bck" onclick="window.location.href = '@HttpContext.Current.Session[" from"]'">Back &nbsp; <i class="fa fa-share-square-o" aria-hidden="true"></i></button>
        </div>

        <div id="Message" style="display:none;"><b>Please Wait</b> ! while record is being validated/uploaded</div><br>
    </div>
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close" onclick="closeDialog()">&times;</span>
        </div>
    </div>
</form>


